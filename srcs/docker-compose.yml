services:
  mariadb: #software que orgaiza esos datos y permite interactuar con ellos de manera estructurada (texto autor fecha comentarios)
    container_name: mariadb
    build: 
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    #ports:
     # - "3306:3306"
    restart: always 
    #expose: #solo accesible el puerto a otros contenedores dentro de la misma red, si pongo ports tambien sistema anfitrión (host)
     # - 3306 # solo debe ser accesible por wordpress
    env_file: #si uso enviroment tengo que poner la definición de cada uno, aunque sea mencionar lo que pone en .env 
      - .env
    volumes:
      - DB_Volume:/var/lib/mysql #asi los datos se conservan, incluso si se elimina
    networks:
      - network


  wordpress:
    container_name: wordpress
    depends_on:
      - mariadb
    build: 
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    restart: always
    #expose: 
     # - 9000 #NGINX envia las peticiones a este puerto para que PHP-FPM las procese. NGINX escucha el puerto 80 o 442 y reenvia la peticion a PHP-FPM. SOLO ACCSIBLE DESDE OS CONTENEDORES (no desde el host)
#    ports:
#      - "8080:80" Si lo quiero exponer al navegador
    env_file:
      - .env
    volumes:
      - WP_Volume:/var/www/html #se guardan aunque el contenedor se elimine: /var/lib/docker/volumes/WP_Volume/_data/, y aqui se guardan wp-config.php, themes, plugins, una imagen...
    networks:
      - network #en vez de usar su IP se pueden comuicar entre si usando mariadb

  nginx:
    container_name: nginx
    # depend on:
    #   - wordpress
    build: ./requirements/nginx
    #solo root puede abrir puertos menores a 1024
    ports:
      - "443:443"
    restart: always
    #expose:
     # - 443 #puedo acceder a WordPress desde mi navegador con https:, 443 estandar
    volumes:
      - WP_Volume:/var/www/html
    networks:
      - network
    #env_file:
     # - .env

volumes:
  WP_Volume:
    driver: local
    driver_opts:
      type: none
      device: ./requirements/wordpress
      o: bind
  DB_Volume:
    driver: local
    driver_opts:
      type: none
      device: ./requirements/mariadb
      o: bind
networks:
  network:
    driver: bridge #red virtual aislada
